#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
df <- openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
dt[ , rx_event :=1]
dt
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==0 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==0 ,'pain','not_pain')]
dt
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
ggplot(doctor_agg_dt, aes(x=doctor_id, y=is_target_drug_pct,color=group)) +
geom_point()
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
group_agg2 <-   dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug),
is_target_drug_pct = mean(is_target_drug)),
by = 'group']
group_agg2 <-   dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug),
is_target_drug_pct = mean(is_target_drug)),
by = 'intervention_group']
group_agg2
group_agg2 <-   dt[, .(rx_cnt = .N,
is_pain_drug_pct = round(mean(is_pain_drug)*100,1),
is_target_drug_pct = round(mean(is_target_drug)*100,1),
by = 'intervention_group']
group_agg2 <-   dt[, .(rx_cnt = .N,
is_pain_drug_pct = round(mean(is_pain_drug)*100,1),
is_target_drug_pct = round(mean(is_target_drug)*100,1)),
by = 'intervention_group']
group_agg2
library(tidyverse)
library(data.table)
library(openxlsx)
#Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
factorize_str <- function (dt){
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
df <- openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
dt[ , rx_event :=1]
dt
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
dt
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
ggplot(doctor_agg_dt, aes(x=doctor_id, y=is_target_drug_pct,color=group)) +
geom_point()
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
doctor_agg_dt[ , variances=var(is_target_drug_pct) , by ='group']
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
library(tidyverse)
library(data.table)
library(openxlsx)
#Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
factorize_str <- function (dt){
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
df <- openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
dt[ , rx_event :=1]
dt
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
dt
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
ggplot(doctor_agg_dt, aes(x=doctor_id, y=is_target_drug_pct,color=group)) +
geom_point()
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density()
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_pain_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
group_agg <- doctor_agg_dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug_pct),
is_target_drug_pct = mean(is_target_drug_pct)),
by = 'group']
group_agg
group_agg2 <-   dt[, .(rx_cnt = .N,
is_pain_drug_pct = round(mean(is_pain_drug)*100,1),
is_target_drug_pct = round(mean(is_target_drug)*100,1)),
by = 'intervention_group']
group_agg2
# Histogram with kernel density
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#Not perfect but sort of close to normal distribution for both groups
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
dt
doctor_agg_dt
test_group_data <- doctor_agg_dt[group=='treatment']$is_target_drug_pct
control_group_data <- doctor_agg_dt[group=='control']$is_target_drug_pct
t.test(test_group_data, control_group_data, var.equal=TRUE)
library(tidyverse)
library(data.table)
library(openxlsx)
factorize_str <- function (dt){
#Purpose:Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
#input:(datatable)
#output:(datatable) returns a copy of the datatable but with all the character datatypes as factors
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
#Read in data
df <- openxlsx::read.xlsx('dataset.xlsx')
#Convert to datatable
dt <- as.data.table(df)
#changing datatypes
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
#Adding a column to help out with analysis
dt[ , rx_event :=1]
dt
#view summary of dataset
summary(factorize_str(dt))
#adding some columns to help out with graph generation
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
dt
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
#aggregate info at doctor level
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
# Visualize the proportion of campaign drug being  prescribed between the treatment and control group
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control Proportions of Campaign Drug Prescriptions", y = "rx_events_proportion")
#Insight: Seems like the treatment group prescribed more of the campaign drug. Maybe the promotion was effective???
# See if the treatment and control group have similiar behavior in tendency of prescribing  pain related drugs
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity")
# Insight: Seems like both groups have similar tendency to prescribe pain drugs. This is important attribute.
# This could be a confounding variable if it wasn't balance. We would need to do things to balance this covariate like propensity score weighting/matching.
# Distribution of doctors' proportion of campaign drugs being prescribed
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight #1: Looks almost normally distributed. This is required for T-test.
#insight #2: Looks like there could be a difference because the distributions aren't completely overlapping.
# Distribution of doctors' proportion of pain prescriptions being prescribed
ggplot(doctor_agg_dt, aes(x = is_pain_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight:Lots of overlap. This matches the bar graphs from before, supporting the evidence that this covariate 'is_pain_drug_pct' is balanced between two groups
#See statistics at study group level
group_agg <- doctor_agg_dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug_pct),
is_target_drug_pct = mean(is_target_drug_pct)),
by = 'group']
group_agg
#insight: Seems like treatment group has much higher proportion of their prescriptions being related to the campaign
#  density graph
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#Insight:Not perfect but sort of close to normal distribution for both groups
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
#Insight:The ratio is less than 4 so this passes the variances test
test_group_data <- doctor_agg_dt[group=='treatment']$is_target_drug_pct
control_group_data <- doctor_agg_dt[group=='control']$is_target_drug_pct
t.test(test_group_data, control_group_data, var.equal=TRUE)
library(tidyverse)
library(data.table)
library(openxlsx)
factorize_str <- function (dt){
#Purpose:Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
#input:(datatable)
#output:(datatable) returns a copy of the datatable but with all the character datatypes as factors
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
#Read in data
df <- openxlsx::read.xlsx('dataset.xlsx')
#Convert to datatable
dt <- as.data.table(df)
#changing datatypes
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
#Adding a column to help out with analysis
dt[ , rx_event :=1]
dt
#view summary of dataset
summary(factorize_str(dt))
#adding some columns to help out with graph generation
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
dt
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
#aggregate info at doctor level
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
# Visualize the proportion of campaign drug being  prescribed between the treatment and control group
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Campaign Drug Prescriptions", y = "rx_events_proportion")
#Insight: Seems like the treatment group prescribed more of the campaign drug. Maybe the promotion was effective???
# See if the treatment and control group have similiar behavior in tendency of prescribing  pain related drugs
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Pain Drug Prescriptions", y = "rx_events_proportion")
# Insight: Seems like both groups have similar tendency to prescribe pain drugs. This is important attribute.
# This could be a confounding variable if it wasn't balance. We would need to do things to balance this covariate like propensity score weighting/matching.
# Distribution of doctors' proportion of campaign drugs being prescribed
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight #1: Looks almost normally distributed. This is required for T-test.
#insight #2: Looks like there could be a difference because the distributions aren't completely overlapping.
# Distribution of doctors' proportion of pain prescriptions being prescribed
ggplot(doctor_agg_dt, aes(x = is_pain_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight:Lots of overlap. This matches the bar graphs from before, supporting the evidence that this covariate 'is_pain_drug_pct' is balanced between two groups
#See statistics at study group level
group_agg <- doctor_agg_dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug_pct),
is_target_drug_pct = mean(is_target_drug_pct)),
by = 'group']
group_agg
#insight: Seems like treatment group has much higher proportion of their prescriptions being related to the campaign
#  density graph
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#Insight:Not perfect but sort of close to normal distribution for both groups
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
#Insight:The ratio is less than 4 so this passes the variances test
test_group_data <- doctor_agg_dt[group=='treatment']$is_target_drug_pct
control_group_data <- doctor_agg_dt[group=='control']$is_target_drug_pct
t.test(test_group_data, control_group_data, var.equal=TRUE)
library(tidyverse)
library(data.table)
library(openxlsx)
factorize_str <- function (dt){
#Purpose:Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
#input:(datatable)
#output:(datatable) returns a copy of the datatable but with all the character datatypes as factors
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
#Read in data
df <- openxlsx::read.xlsx('dataset.xlsx')
#Convert to datatable
dt <- as.data.table(df)
#changing datatypes
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
#Adding a column to help out with analysis
dt[ , rx_event :=1]
head(dt)
#view summary of dataset
summary(factorize_str(dt))
#adding some columns to help out with graph generation
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
head(dt)
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
#aggregate info at doctor level
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
# Visualize the proportion of campaign drug being  prescribed between the treatment and control group
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Campaign Drug Prescriptions", y = "rx_events_proportion")
#Insight: Seems like the treatment group prescribed more of the campaign drug. Maybe the promotion was effective???
# See if the treatment and control group have similiar behavior in tendency of prescribing  pain related drugs
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Pain Drug Prescriptions", y = "rx_events_proportion")
# Insight: Seems like both groups have similar tendency to prescribe pain drugs. This is important attribute.
# This could be a confounding variable if it wasn't balance. We would need to do things to balance this covariate like propensity score weighting/matching.
# Distribution of doctors' proportion of campaign drugs being prescribed
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight #1: Looks almost normally distributed. This is required for T-test.
#insight #2: Looks like there could be a difference because the distributions aren't completely overlapping.
# Distribution of doctors' proportion of pain prescriptions being prescribed
ggplot(doctor_agg_dt, aes(x = is_pain_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#insight:Lots of overlap. This matches the bar graphs from before, supporting the evidence that this covariate 'is_pain_drug_pct' is balanced between two groups
#See statistics at study group level
group_agg <- doctor_agg_dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug_pct),
is_target_drug_pct = mean(is_target_drug_pct)),
by = 'group']
group_agg
#insight: Seems like treatment group has much higher proportion of their prescriptions being related to the campaign
#  density graph
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#Insight:Not perfect but sort of close to normal distribution for both groups
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
#Insight:The ratio is less than 4 so this passes the variances test
test_group_data <- doctor_agg_dt[group=='treatment']$is_target_drug_pct
control_group_data <- doctor_agg_dt[group=='control']$is_target_drug_pct
t.test(test_group_data, control_group_data, var.equal=TRUE)
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
library(tidyverse)
library(data.table)
library(openxlsx)
factorize_str <- function (dt){
#Purpose:Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
#input:(datatable)
#output:(datatable) returns a copy of the datatable but with all the character datatypes as factors
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
#Read in data
df <- openxlsx::read.xlsx('dataset.xlsx')
#Convert to datatable
dt <- as.data.table(df)
#changing datatypes
dt[ , doctor_id:=as.character(doctor_id)]
dt[ , rx_id:=as.character(rx_id)]
#Adding a column to help out with analysis
dt[ , rx_event :=1]
head(dt)
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
#adding some columns to help out with graph generation
dt[ , intervention_group := ifelse(has_seen_msg ==1 ,'treatment','control')]
dt[ , categorical_target_value := ifelse(is_target_drug ==1 ,'target','not_target')]
dt[ , categorical_pain_value := ifelse(is_pain_drug ==1 ,'pain','not_pain')]
head(dt)
#Check if there are any NAs
round(colSums(is.na(dt)) *100/nrow(dt),1)
#check if a doctor can be in the treatment and the control group
dt[ , uniqueN(intervention_group) , by ='doctor_id'][V1>1]
#Check if there are duplicate prescriptions
dt[ , .(count=.N) , by='rx_id'][count>1]
#aggregate info at doctor level
doctor_agg_dt <- dt [ , .(group=max(intervention_group ),
rx_cnt=.N ,
is_pain_drug_pct=round(sum(is_pain_drug)*100/.N,1),
is_target_drug_pct=round(sum(is_target_drug)*100/.N,1)),
by='doctor_id']
doctor_agg_dt
# Visualize the proportion of campaign drug being  prescribed between the treatment and control group
ggplot(dt, aes (fill=categorical_target_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Campaign Drug Prescriptions", y = "rx_events_proportion")
# See if the treatment and control group have similiar behavior in tendency of prescribing  pain related drugs
ggplot(dt, aes (fill=categorical_pain_value ,y=rx_event, x=intervention_group)) +
geom_bar(position="fill", stat="identity") +
labs( title = "Treatment vs Control:Proportions of Pain Drug Prescriptions", y = "rx_events_proportion")
# Distribution of doctors' proportion of campaign drugs being prescribed
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
# Distribution of doctors' proportion of pain prescriptions being prescribed
ggplot(doctor_agg_dt, aes(x = is_pain_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#See statistics at study group level
group_agg <- doctor_agg_dt[, .(rx_cnt = .N,
is_pain_drug_pct = mean(is_pain_drug_pct),
is_target_drug_pct = mean(is_target_drug_pct)),
by = 'group']
group_agg
#  density graph
ggplot(doctor_agg_dt, aes(x = is_target_drug_pct , fill=group)) +
geom_density(alpha = 0.5)
#Insight:Not perfect but sort of close to normal distribution for both groups
doctor_agg_dt[ , var(is_target_drug_pct) , by ='group']
#Insight:The ratio is less than 4 so this passes the variances test
test_group_data <- doctor_agg_dt[group=='treatment']$is_target_drug_pct
control_group_data <- doctor_agg_dt[group=='control']$is_target_drug_pct
t.test(test_group_data, control_group_data, var.equal=TRUE)
